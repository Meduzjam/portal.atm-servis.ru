{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"pr",
				"prototype"
			],
			[
				"ar",
				"arguments"
			],
			[
				"_e",
				"_enabled"
			],
			[
				"fu",
				"function"
			],
			[
				"th",
				"throw"
			],
			[
				"num",
				"number"
			],
			[
				"retu",
				"return"
			],
			[
				"a",
				"arguments"
			],
			[
				"ca",
				"call"
			],
			[
				"arg",
				"arguments"
			],
			[
				"fuc",
				"function"
			],
			[
				"fun",
				"function"
			],
			[
				"func",
				"function"
			],
			[
				"mode",
				"models"
			],
			[
				"priv",
				"private	keyword"
			],
			[
				"co",
				"constructor	keyword"
			],
			[
				"Ob",
				"Object	interface"
			],
			[
				"str",
				"string	keyword"
			],
			[
				"nu",
				"number	keyword"
			],
			[
				"S",
				"Sertificates"
			],
			[
				"T",
				"TimeStampedModel"
			],
			[
				"Custom",
				"CustomerModel	alias"
			],
			[
				"impo",
				"import	imports a module â€¦"
			],
			[
				"padd",
				"padding-top"
			],
			[
				"ma",
				"margin-left"
			],
			[
				"he",
				"height"
			],
			[
				"ver",
				"vertical-align"
			],
			[
				"margin",
				"margin-right"
			],
			[
				"margin-",
				"margin-left"
			],
			[
				"align",
				"vertical-align"
			],
			[
				"im",
				"import"
			],
			[
				"mo",
				"models"
			]
		]
	},
	"buffers":
	[
		{
			"file": "static/ng2/app/plans/detail.component.ts",
			"settings":
			{
				"buffer_size": 1552,
				"line_ending": "Unix"
			}
		},
		{
			"file": "api/urls.py",
			"settings":
			{
				"buffer_size": 322,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "from tastypie.resources import ModelResource, ALL, ALL_WITH_RELATIONS\nfrom plan.models import Plan, Project, ProjectPlan, Task\nfrom tastypie.api import Api\nfrom tastypie import fields\nfrom tastypie.authentication import SessionAuthentication\n\n\n\n\nclass ProjectResource(ModelResource):\n	class Meta:\n		queryset = Project.objects.all()\n		resource_name = 'project'\n		fields = ['id','name']\n		allowed_methods = ['get']\n		include_resource_uri = False\n		authentication = SessionAuthentication()\n\n\nclass PlanResource(ModelResource):\n	class Meta:\n		queryset = Plan.objects.all()\n		resource_name = 'plan'\n		fields = ['id','department','year']\n		allowed_methods = ['get','post','put']\n		include_resource_uri = False\n		authentication = SessionAuthentication()\n		filtering = {\n			'id': ALL,\n			'year': ALL,\n			'department': ALL,\n		}\n\n	def dehydrate(self, bundle):\n		# bundle.data['http'] = bundle.obj;\n		return bundle;\n\nclass PlanProjectsResource(ModelResource):\n	# project = fields.ForeignKey(ProjectResource, 'project', full=True)\n	# plan = fields.ForeignKey(PlanResource, 'plan', full=True)\n	project = fields.ToOneField(ProjectResource, 'project', full=True)\n	plan = fields.ToOneField(PlanResource, 'plan', full=True)\n\n	class Meta:\n		queryset = ProjectPlan.objects.all()\n		resource_name = 'planprojects'\n		fields = ['id','plan','project']\n		#excludes = ['plan','project'];\n		allowed_methods = ['get']\n		include_resource_uri = False\n		authentication = SessionAuthentication()\n		filtering = {\n			'plan': ALL_WITH_RELATIONS,\n		}\n\n	def dehydrate(self, bundle):\n		return bundle\n\n\nclass TaskResource(ModelResource):\n	perent = fields.ForeignKey('self', 'parent', full=True, null=True)	\n	class Meta:\n		queryset = Task.objects.all()\n		resource_name = 'task'\n		fields = ['id','name','parent']\n		allowed_methods = ['get']\n		include_resource_uri = False\n		authentication = SessionAuthentication()\n\n\n\n\n#class SertificatesResource(ModelResource):\n	#Type = fields.ForeignKey(SertificateTypesResource, 'Type', full=True)\n#	class Meta:\n#		queryset = Sertificates.objects.all()\n#		resource_name = 'sertificates'\n#		fields = ['id','Title','Type','File']\n#		allowed_methods = ['get']\n#		include_resource_uri = False\n",
			"file": "api/rest.py",
			"file_size": 2259,
			"file_write_time": 131166602264238009,
			"settings":
			{
				"buffer_size": 2185,
				"line_ending": "Windows"
			}
		},
		{
			"file": "plan/models.py",
			"settings":
			{
				"buffer_size": 2858,
				"line_ending": "Windows"
			}
		},
		{
			"file": "static/ng2/app/plans/model.ts",
			"settings":
			{
				"buffer_size": 1600,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { PlanModel,PlanProjectModel } from './model';\nimport { Observable }     from 'rxjs/Observable';\n\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class PlanService {\n\n  private endpoint_url = `http://127.0.0.1:8000/api/v1`;\n  \n  constructor(private http: Http) {\n\n  }\n    \n  getPlans():Observable<PlanModel[]> {\n    return this.http.get(this.endpoint_url+'/plan/?format=json')\n      .map( res => PlanModel.fromJSON(res.json().objects) ) \n      .catch(this.handleError);\n  }\n\n  getPlanProjects(id: number | string):Observable<PlanProjectModel[]> {\n    return this.http.get(this.endpoint_url+'/planprojects/?format=json&plan__id='+ +id)\n      .map( res => PlanProjectModel.fromJSON(res.json().objects) )\n      .catch(this.handleError);\n  }\n\n  getPlanDetail(id: number | string) {\n    return this.getPlans()\n      .map(plans => plans.find(plan => plan.id === +id));\n  }\n\n  private handleError(error: any) {\n      let errMsg = (error.message) ? error.message :\n      error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n      console.error(errMsg); // log to console instead\n      return Observable.throw(errMsg);\n  }\n\n}\n\n\n/*\nCopyright 2016 Google Inc. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/",
			"file": "static/ng2/app/plans/service.ts",
			"file_size": 1495,
			"file_write_time": 131165899359337644,
			"settings":
			{
				"buffer_size": 1494,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 334.0,
		"last_filter": "Snippet: ",
		"selected_items":
		[
			[
				"Snippet: ",
				"Snippet: Prototype"
			],
			[
				"git pull",
				"Git: Pull"
			],
			[
				"git st",
				"Git: Status"
			],
			[
				"git pu",
				"Git: Push"
			],
			[
				"git s",
				"Git: Status"
			],
			[
				"git pus",
				"Git: Push"
			],
			[
				"git sta",
				"Git: Status"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git c",
				"Git: Commit"
			],
			[
				"git ad",
				"Git: Add Current File"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"git a",
				"Git: Add Current File"
			],
			[
				"git di",
				"Git: Diff Current File"
			],
			[
				"git stat",
				"Git: Status"
			],
			[
				"git ",
				"Git: Commit"
			],
			[
				"gita",
				"Git: Add Current File"
			],
			[
				"git af",
				"Git: Add Current File"
			],
			[
				"git p",
				"Git: Push"
			],
			[
				"g",
				"Git: Commit"
			],
			[
				"git",
				"Git: Commit"
			],
			[
				"gi",
				"Git: Add All"
			],
			[
				"git add",
				"Git: Add All"
			],
			[
				"git che",
				"Git: Checkout Tag"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"packake ",
				"Package Control: Install Package"
			],
			[
				"package ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 255.0,
		"history":
		[
			"cls",
			"gdfg",
			"emmet",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"package control:Install Package"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/Work/web/portal.atm-servis.ru/api",
		"/D/Work/web/portal.atm-servis.ru/config",
		"/D/Work/web/portal.atm-servis.ru/config/settings",
		"/D/Work/web/portal.atm-servis.ru/plan",
		"/D/Work/web/portal.atm-servis.ru/requirements",
		"/D/Work/web/portal.atm-servis.ru/static",
		"/D/Work/web/portal.atm-servis.ru/static/ng2",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/app",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/app/plans",
		"/D/Work/web/portal.atm-servis.ru/templates"
	],
	"file_history":
	[
		"/D/Work/web/portal.atm-servis.ru/api/rest.py",
		"/D/Work/web/portal.atm-servis.ru/config/urls.py",
		"/D/Work/web/portal.atm-servis.ru/main/urls.py",
		"/D/Work/web/portal.atm-servis.ru/main/views.py",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/app/app.routing.ts",
		"/D/Work/web/portal.atm-servis.ru/api/urls.py",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/app/plans/service.ts",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/app/plans/model.ts",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/app/plans/list.component.ts",
		"/D/Work/web/portal.atm-servis.ru/templates/index.html",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/app/app.component.ts",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/app/plans/routing.ts",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/app/app.module.ts",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/app/plans/module.js",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/app/auth-guard.service.ts",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/app/app.component.js.map",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/systemjs.config.js",
		"/D/Work/web/portal.atm-servis.ru/static/ng3/package.json",
		"/D/Work/web/portal.atm-servis.ru/static/ng3/tsconfig.json",
		"/D/Work/web/portal.atm-servis.ru/static/ng3/systemjs.config.js",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/tsconfig.json",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/package.json",
		"/D/Work/web/portal.atm-servis.ru/static/ng3/typings.json",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/app/plans/detail.component.ts",
		"/D/Work/web/ng2/app/app.routing.ts",
		"/D/Work/web/ng2/app/plans/module.ts",
		"/D/Work/web/ng2/app/app.component.ts",
		"/D/Work/web/ng2/app/plans/detail.component.ts",
		"/D/Work/web/ng2/app/app.module.ts",
		"/D/Work/web/ng2/app/plans/service.ts",
		"/D/Work/web/ng2/app/plans/list.component.ts",
		"/D/Work/web/ng2/app/plans/routing.ts",
		"/D/Work/web/ng2/app/plans/model.ts",
		"/D/Work/web/ng2/index.html",
		"/D/Work/web/ng2/typings.json",
		"/D/Work/web/ng2/systemjs.config.js",
		"/D/Work/web/ng2/package.json",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/index.html",
		"/D/Work/web/ng2/tsconfig.json",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/app/main.ts",
		"/D/Work/web/portal.atm-servis.ru/templates/plan/plan.html",
		"/D/Work/web/portal.atm-servis.ru/templates/base.html",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/src/plan/routes/app.ts",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/src/plan/main.ts",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/typings.json",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/src/plan/services/plan.ts",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/src/plan/routes/plans.ts",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/Promise/src.js",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/Promise/index.html",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/src/plan/models/project.ts",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/src/plan/models/project.js",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/src/plan/components/plans.ts",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/Mixin/src.js",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/Mixin/index.html",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/Error/src.js",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/Error/index.html",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/Clock/index.html",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/Menu/src.js",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/Clock/src.js",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/Menu/index.html",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/Coffe_proto/index.html",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/Coffe_proto/src.js",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/Proto/index.html",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/Proto/src.js",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/Fridge/src.js",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/Fridge/index.html",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/Getter/test.js",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/Getter/src.js",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/Getter/index.html",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/Coffe/src.js",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/Timers/index.html",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/Timers/src.js",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/JSON/index.html",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/JSON/src.js",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/src/plan/models/plan.ts",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/formatDate/test.js",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/formatDate/src.js",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/formatDate/index.html",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/formatDate/test.html",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/4.html",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/test.html",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/test.js",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/3.html",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/3.js",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/2.html",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/2.js",
		"/D/Work/web/JavaScript/Ð—Ð°Ð´Ð°Ñ‡ÐºÐ¸/1.html",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/src/plan/components/plan-detail.ts",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/src/plan/components/projects.ts",
		"/D/Work/web/portal.atm-servis.ru/plan/models.py",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/src/plan/routers/routes.ts",
		"/D/Work/web/portal.atm-servis.ru/static/ng2/src/plan/models/projects.ts",
		"/D/Work/web/portal.atm-servis.ru/config/settings/common.py",
		"/D/Work/web/portal.atm-servis.ru/project/models.py",
		"/D/Work/web/portal.atm-servis.ru/plan/views.py",
		"/D/Work/web/portal.atm-servis.ru/ng2/systemjs.config.js",
		"/D/Work/web/portal.atm-servis.ru/ng2/src/plan/main.ts",
		"/D/Work/web/portal.atm-servis.ru/ng2/src/plan/components/plans.ts",
		"/D/Work/web/portal.atm-servis.ru/ng2/src/plan/models/plan.ts",
		"/D/Work/web/portal.atm-servis.ru/ng2/src/plan/components/plan-item-render.ts",
		"/D/Work/web/portal.atm-servis.ru/ng2/src/plan/services/plan.ts",
		"/D/Work/web/portal.atm-servis.ru/plan/urls.py",
		"/D/Work/web/portal.atm-servis.ru/plan/apps.py",
		"/D/Work/web/portal.atm-servis.ru/main/models.py",
		"/D/Work/web/portal.atm-servis.ru/ng2/package.json",
		"/D/Work/web/portal.atm-servis.ru/config/settings/production.py",
		"/D/Work/web/portal.atm-servis.ru/requirements/base.txt",
		"/D/Work/web/portal.atm-servis.ru/config/settings/local.py",
		"/D/Work/web/portal.atm-servis.ru/requirements/production.txt",
		"/D/Work/web/portal.atm-servis.ru/config/settings/ldap_auth.py",
		"/D/Work/web/portal.atm-servis.ru/requirements/local.txt",
		"/D/Work/web/portal.atm-servis.ru/project/admin.py",
		"/D/Work/web/portal.atm-servis.ru/config/settings/base.py",
		"/D/Work/web/portal.atm-servis.ru/timesheet/models.py",
		"/C/Users/MakarovAS/AppData/Local/Temp/scp17181/var/log/httpd/portal.atm-servis.ru.log",
		"/D/Work/web/portal.atm-servis.ru/require.txt",
		"/D/Work/web/portal.atm-servis.ru/main/admin.py",
		"/D/Work/web/atm_s_ru_project/atm_s_ru/main/admin.py",
		"/C/Users/MakarovAS/AppData/Local/Temp/scp22951/var/log/httpd/portal.atm-servis.ru.log",
		"/D/Work/web/atm_s_ru_project/atm_s_ru/main/apps.py",
		"/D/Work/web/portal.atm-servis.ru/project/apps.py",
		"/C/Users/MakarovAS/AppData/Local/Temp/scp20055/var/www/portal.atm-servis.ru/require.txt",
		"/C/Users/MakarovAS/AppData/Local/Temp/scp04958/var/log/httpd/error_log",
		"/C/Users/MakarovAS/AppData/Local/Temp/scp55028/var/www/example.com/require.txt",
		"/C/Users/MakarovAS/AppData/Local/Temp/scp41205/var/www/portal.atm-servis.ru/venv/bin/activate.fish",
		"/C/Users/MakarovAS/AppData/Local/Temp/scp39823/var/www/portal.atm-servis.ru/venv/bin/activate.csh",
		"/C/Users/MakarovAS/AppData/Local/Temp/scp38605/var/www/portal.atm-servis.ru/venv/bin/activate",
		"/C/Users/MakarovAS/AppData/Local/Temp/scp45849/var/www/portal.atm-servis.ru/venv/bin/python3.5"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"call",
			"02",
			"example",
			"child",
			"footer",
			"media-middle",
			".media-middle",
			"vertical",
			"navbar",
			"navbar-header",
			"navbar",
			".navbar",
			"48",
			"@media",
			"@media screen",
			"@media screen and (min-width: 768px)",
			"navbar",
			"@grid-gutter-width",
			"30px",
			"@grid-gutter-width",
			"@line-height-computed",
			"masthead",
			"img",
			"navbar",
			"p",
			"h1",
			"brand",
			" %}",
			"\n        ",
			"        \n",
			"'DIRS': [ os.path.join(BASE_DIR, \"templates\"), os.path.join(MainConfig.path, \"templates\") ],"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "static/ng2/app/plans/detail.component.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1552,
						"regions":
						{
						},
						"selection":
						[
							[
								454,
								454
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 114.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "api/urls.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 322,
						"regions":
						{
						},
						"selection":
						[
							[
								246,
								246
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": false,
								"indentSize": 4,
								"tabSize": 4
							}
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "api/rest.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2185,
						"regions":
						{
						},
						"selection":
						[
							[
								1876,
								1876
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 766.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "plan/models.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2858,
						"regions":
						{
						},
						"selection":
						[
							[
								609,
								615
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "static/ng2/app/plans/model.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1600,
						"regions":
						{
						},
						"selection":
						[
							[
								991,
								991
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": false,
								"indentSize": 4,
								"tabSize": 4
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 456.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "static/ng2/app/plans/service.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1494,
						"regions":
						{
						},
						"selection":
						[
							[
								1041,
								1041
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 171.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.doc":
	{
		"height": 124.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 153.0
	},
	"output.git-commit":
	{
		"height": 124.0
	},
	"output.git-pull":
	{
		"height": 130.0
	},
	"output.git-push":
	{
		"height": 124.0
	},
	"pinned_build_system": "",
	"project": "portal.atm-servis.ru.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 306.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
